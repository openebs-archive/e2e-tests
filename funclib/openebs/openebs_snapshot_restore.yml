# This utility can create volume snapshot and restore the volume to the earlier state snapshot.
# Author: Giri
# The required parameters are 
#     - operaror_ns ( OpenEBS namespace )
#     - volume_name ( Name of PV on which the snapshot has to be created)
#     - snapshot_name ( Name for snapshot )
#     - app_ns ( Namespace on which application has been deployed)
# These arguments are to be obtained as environmental variables in the e2e-book.

- block:

    - name: Obtaining the openebs openebs maya-api server pod name.
      shell: kubectl get pod -n {{ operator_ns }} -l name=maya-apiserver -o custom-columns=:metadata.name --no-headers
      args:
        executable: /bin/bash
      register: result

    - name: setting the maya-apiserver pod name to a variable.
      set_fact:
        mayapod_name: "{{ result.stdout }}"

    - name: Creating openebs volume snapshot using mayactl.
      shell: >
        kubectl exec {{ mayapod_name }} -n {{ operator_ns }} -c maya-apiserver
        -- mayactl snapshot create --volname {{ volume_name }} -n {{ app_ns }}
        --snapname {{ snapshot_name }}
      args:
        executable: /bin/bash
      register: result
      failed_when: "'created' not in result.stdout"

    - name: Confirm successful snapshot creation by listing the snapshots.
      shell: >
        kubectl exec {{ mayapod_name }} -n {{ operator_ns }} -c maya-apiserver
        -- mayactl snapshot list --volname {{ volume_name }} -n {{ app_ns }}
      args:
        executable: /bin/bash
      register: snapshot_list
      failed_when: "snapshot_name not in snapshot_list.stdout"

  when: action == "create_snapshot"

- block:

    - name: Restore volume to earlier state using snapshot.
      shell: >
        kubectl exec {{ mayapod_name }} -n openebs -c maya-apiserver
        -- mayactl snapshot revert --volname {{ volume_name }} -n {{ app_ns }}
        --snapname {{snapshot_name}}
      args:
        executable: /bin/bash
      register: result
      failed_when: "'Reverting to snapshot' not in result.stdout"

  when: action == "restore_snapshot"
