# TODO 
# Delete storage pool and storage class

- hosts: localhost
  connection: local

  vars_files:
  - vars.yaml

  tasks:
    - block:
          - block:
              ## RECORD START of e2e job
              - name: Record test instance/run ID
                set_fact:
                  run_id: "{{ lookup('env','RUN_ID') }}"
              - name: Construct testname appended with runID
                set_fact:
                  test_name: "{{ cleanup_test_name }}-{{ run_id }}"
            when: lookup('env','RUN_ID')

          - name: Generate the e2e result CR to reflect Start of Cleanup
            template:
              src: /e2e-result.j2
              dest: e2e-result.yaml
            vars:
              test: "{{ cleanup_test_name }}"
              chaostype: ""
              app: ""
              phase: in-progress
              verdict: none

          - name: Analyze the cr yaml
            shell: cat e2e-result.yaml

          - name: Apply the e2e result CR
            shell: kubectl apply -f e2e-result.yaml
            args:
              executable: /bin/bash
            register: lr_status 
            failed_when: "lr_status.rc != 0"

          - template:
              src: sp.j2
              dest: "{{ storage_pool }}"

          - template:
              src: sc.j2
              dest: "{{ storage_class }}"

          - name: Deleting storage pool
            shell: "{{ kubeapply }} delete -f {{ storage_pool }}"
            args:
              executable: /bin/bash
            ignore_errors: True
              
          - name: Deleting storage class
            shell: "{{ kubeapply }} delete -f {{ storage_class }}"
            args:
              executable: /bin/bash
            ignore_errors: True

          - name: Confirm that openebs storage pools are deleted
            shell: kubectl get storagepool
            args:
              executable: /bin/bash
            register: result_sp
            until: "'{{ lookup('env','STORAGE_POOL_NAME') }}' not in result_sp.stdout"
            delay: 30
            retries: 100

          - name: Confirm that openebs storage classes are deleted
            shell: kubectl get storageclass
            args:
              executable: /bin/bash
            register: result_sc
            until: "'{{ lookup('env','STORAGECLASS_NAME') }}' not in result_sc.stdout"
            delay: 30
            retries: 100

          - set_fact:
              flag: "Pass"
      rescue: 
        - set_fact: 
            flag: "Fail"

      always:
        ## Updating status to CR
        - name: Generate the e2e result CR to reflect End Of Cleanup
          template:
            src: /e2e-result.j2
            dest: e2e-result.yaml
          vars:
            test: "{{ cleanup_test_name }}"
            chaostype: ""
            app: ""
            phase: completed
            verdict: "{{ flag }}"

        - name: Analyze the cr yaml
          shell: cat e2e-result.yaml
          

        - name: Apply the e2e result CR
          shell: kubectl apply -f e2e-result.yaml
          args:
            executable: /bin/bash
          register: lr_status
          failed_when: "lr_status.rc != 0"