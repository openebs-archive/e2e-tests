---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: node-replacement-
  namespace: e2e
spec:
  template:
    metadata:
      labels:
        name: node-replacement
    spec:
      serviceAccountName: e2e
      restartPolicy: Never
      #nodeSelector:
      #  kubernetes.io/hostname:

      tolerations:
      - key: "infra-aid"
        operator: "Equal"
        value: "observer"
        effect: "NoSchedule"

      containers:
      - name: ansibletest
        image: openebs/ansible-runner:ci
        imagePullPolicy: IfNotPresent
        env:
          - name: ANSIBLE_STDOUT_CALLBACK
            #value: log_plays
            #value: actionable
            value: default

          - name: APP_NAMESPACE
            value: app-percona-ns

          - name: APP_PVC
            value: percona-mysql-claim

          - name: APP_LABEL
            value: 'name=percona'

          - name: LIVENESS_APP_LABEL
            value: "liveness=percona-liveness"

          - name: LIVENESS_APP_NAMESPACE
            value: "e2e"

          - name: DATA_PERSISTENCY
            value: "enable"

          - name: PLATFORM
            value: "AWS"

          ## Value of AWS_ACCESS_KEY_ID need to be replaced with original value
          - name: AWS_ACCESS_KEY_ID
            value: "access_key"

          ## Value of AWS_SECRET_ACCESS_KEY need to be replaced with original value
          - name: AWS_SECRET_ACCESS_KEY
            value: "secret_key"

          ## Actions can be performed on AWS ec2 instance and values (stopped,running,present,absent,restarted ansible-version >= 2.2)
          - name: ACTION
            value: "stopped"

          - name: SUBNET_ID
            value: "subnet_id"

        command: ["/bin/bash"]
        args: ["-c", "ansible-playbook ./experiments/chaos/app_node_failure_diff_aws/test.yml -i /etc/ansible/hosts -vv; exit 0"]

