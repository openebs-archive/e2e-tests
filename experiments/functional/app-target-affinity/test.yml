---
#Description: Checking application and Target scheduled on same node.
#
########################################################################################
#Steps:                                                                                #
#1) Creating LitmusResult CR for updating test result.                                 #
#2) Obtain the PVC name by using application lable                                     #
#2) Checking if the Application and Target scheduled on same node.                     #
########################################################################################

- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:

          ## Generating the testname for deployment
        - include_tasks: /utils/fcm/create_testname.yml

        ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: "/utils/fcm/update_e2e_result_resource.yml"
          vars:
            status: 'SOT'

        - name: Identify the functional util to be invoked
          template:
            src: functional_util.j2
            dest: functional_util.yml

        - include_vars:
            file: functional_util.yml

        - name: Record the functional util path
          set_fact: 
            functional_util_path: "/utils/{{ functional_util }}"

        - name: Obtain the pvc name of the application.
          shell: >
            kubectl get pvc -n {{ application_ns }} -l {{ application_label }} 
            -o custom-columns=:metadata.name --no-headers
          args:
            executable: /bin/bash
          register: pvc_name

       ## Passing app_ns, app_pvc, operator_ns, app_label as environmental variable.
        - include: "{{ functional_util_path }}"
          app_ns: "{{ application_ns}}"
          app_label: "{{ application_label }}"
          app_pvc: "{{ pvc_name.stdout }}"
          operator_ns: "{{ operatorns }}"

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"

      always:
           ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'

