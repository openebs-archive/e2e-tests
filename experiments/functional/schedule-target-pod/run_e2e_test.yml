---
apiVersion: batch/v1
kind: Job
metadata:
  generateName: e2e-target-pod-schedule-
  namespace: e2e
spec:
  template:
    metadata:
      name: e2e
      labels:
        app: e2e-target-schedule

    spec:
      serviceAccountName: e2e
      restartPolicy: Never
      containers:
      - name: ansibletest
        image: openebs/ansible-runner:ci
        imagePullPolicy: IfNotPresent

        env:
          - name: ANSIBLE_STDOUT_CALLBACK
            value: default

            # Application namespace
          - name: APP_NAMESPACE
            value: app-busybox-ns

          - name: APP_LABEL
            value: app=busybox-deploy

            #Target namespace
          - name: OPERATOR_NS
            value: openebs

          - name: APP_PVC
            value: openebs-busybox

          - name: DEPLOY_TYPE
            value: deployment
            
            # Provide the node name where target pod should be scheduled
            # If the node name is not given, random node is selected 
          - name: TARGET_NODE
            value: 

          - name: REPLICA_COUNT
            value: "3"
           
            # Provide the value to label the node
          - name: NODE_LABEL
            value: node=appnode

            # Provide the name of STORAGE_CLASS 
          - name: PROVIDER_STORAGE_CLASS
            value: openebs-cstor-sc
            
            # Provide name POOL_NAME 
          - name: POOL_NAME
            value: cstor-block-disk-pool

          - name: PV_CAPACITY
            value: 5Gi

        command: ["/bin/bash"]
        args: ["-c", "ansible-playbook ./experiments/functional/schedule-target-pod/test.yml -i /etc/ansible/hosts -vv; exit 0"]