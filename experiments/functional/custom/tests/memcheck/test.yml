- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
   - block:

       ## Generating the testname for deployment
       - include_tasks: /utils/fcm/create_testname.yml

        ## RECORD START-OF-TEST IN LITMUS RESULT CR
       - include_tasks: /utils/fcm/update_e2e_result_resource.yml
         vars:
           status: 'SOT'

        ## VERIFY AVAILABILITY OF SELECTED STORAGE CLASS
       - name: Check whether the provider storageclass is applied
         shell: kubectl get sc {{ lookup('env','PROVIDER_STORAGE_CLASS') }}
         args:
           executable: /bin/bash
         register: result

       - name: Replace the storageclass placeholder with provider
         replace:
           path: "{{ memleak_yml }}"
           regexp: "testclass"
           replace: "{{ lookup('env','PROVIDER_STORAGE_CLASS') }}"

       - name: Create test specific namespace.
         shell: kubectl create ns {{ app_ns }}
         args:
           executable: /bin/bash
         when: app_ns != 'e2e'

       - name: Checking the status  of test specific namespace.
         shell: kubectl get ns {{ app_ns }} -o jsonpath='{.status.phase}'
         args:
           executable: /bin/bash
         register: npstatus
         until: "'Active' in npstatus.stdout"
         delay: 30
         retries: 10

       ## RUN MEMLEAK TEST

       - name: Deploy OpenEBS volume and run dd Load
         shell: kubectl apply -f {{ memleak_yml }} -n {{ app_ns }}
         args:
           executable: /bin/bash

       - name: Confirm volume status is running
         shell: >
           kubectl get pods -n {{ app_ns }} -o jsonpath='{.items[?(@.metadata.labels.name=="memleak")].status.phase}'
         args:
           executable: /bin/bash
         register: result
         until: "'Running' in result.stdout"
         delay: 30
         retries: 10

       - name: Obtain the volume name
         shell: >
           kubectl get pvc -n {{ app_ns }} --no-headers -o custom-columns=:.spec.volumeName
         args:
           executable: /bin/bash
         register: pv_name

       - name: Run python script for memory usage validation it takes couple of minutes
         shell: python test-mem.py {{ operator_ns }} {{ memory_bm }} {{ pv_name.stdout }}
         args:
           executable: /bin/bash
         register: result
         failed_when: "'Pass' not in result.stdout"

       - set_fact:
           flag: "Pass"

     rescue:
       - set_fact:
           flag: "Fail"

     always:

       - name: Deprovisioning test related resources
         shell: |
           kubectl delete -f {{ memleak_yml }} -n {{ app_ns }}

       - name: Checking whether the application pod is removed
         shell: kubectl get pod -n {{ app_ns }} -l name=memleak | wc -l 
         register: pod_status
         until: "'0' in pod_status.stdout"
         retries: 10
         delay: 5         

            ## RECORD END-OF-TEST IN LITMUS RESULT CR
       - include_tasks: /utils/fcm/update_e2e_result_resource.yml
         vars:
           status: 'EOT'
