---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:
        - block:

            - name: Record test instance/run ID
              set_fact:
                run_id: "{{ lookup('env','RUN_ID') }}"

            - name: Construct testname appended with runID
              set_fact:
                test_name: "{{ test_name }}-{{ run_id }}"

          when: lookup('env','RUN_ID')

       ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'

        - name: Checking the status  of test specific namespace.
          shell: kubectl get ns {{ namespace }} -o jsonpath='{.status.phase}'
          args:
           executable: /bin/bash
          register: status
          until: "'Active' in status.stdout"
          delay: 30
          retries: 10

        # Checking if the application is deployed before starting load generation

        - name: Obtain the number of statefulset replicas.
          shell: kubectl get statefulset -n {{ namespace }} -l {{ app_label }} -o custom-columns=:spec.replicas
          args:
            executable: /bin/bash
          register: rep_count
          until: "rep_count.rc == 0"
          delay: 60
          retries: 15

        - name: Obtain the ready replica count and compare with the replica count.
          shell: kubectl get statefulset -n {{ namespace }} -l {{ app_label }} -o custom-columns=:..readyReplicas
          args:
            executable: /bin/bash
          register: ready_rep
          until: "ready_rep.rc == 0 and ready_rep.stdout|int == rep_count.stdout|int"
          delay: 60
          retries: 30

        - name: Obtaining the loadgen pod label from env.
          set_fact:
            loadgen_lkey: "{{ loadgen_label.split('=')[0] }}"
            loadgen_lvalue: "{{ loadgen_label.split('=')[1] }}"

        - name: Obtaining the Service name 
          shell: kubectl get service -n {{ namespace }} -l {{ app_label }} -o jsonpath='{.items[0].metadata.name}'
          register: service_name    

        - name: Obtaining the application pod name
          shell: kubectl get pod -n {{ namespace }} -l {{ app_label }} -o jsonpath='{.items[0].metadata.name}'
          register: pod_name  

        - name: Replace the label in loadgen job spec.
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "loadgen_lkey: loadgen_lvalue"
            replace: "{{ loadgen_lkey }}: {{ loadgen_lvalue }}"

        - name: Replace namespace placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "name_space"
            replace: "{{ namespace }}"

        - name: Replace service placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "servicename"
            replace: "{{ service_name.stdout }}"

        - name: Replace database placeholder
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "dbname"
            replace: "{{ lookup('env','DATABASE_NAME') }}"

        - name: Replace password placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "database_password"
            replace: "{{ lookup('env','PASSWORD') }}"

        - name: Replace database-user placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "dbuser"
            replace: "{{ lookup('env','DATABASE_USER') }}"

        - name: Replace port placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "port"
            replace: "{{ lookup('env','PORT') }}" 

        - name: Replace transaction placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "database_transaction"
            replace: "{{ lookup('env','TRANSACTIONS') }}"

        - name: Replace parallel-transaction placeholder in Crunchy-loadgen
          replace:
            path: "{{ crunchy_loadgen }}"
            regexp: "paralleltransaction"
            replace: "{{ lookup('env','PARALLEL_TRANSACTION') }}"           
        
        - name: Create Crunchy-postgres Loadgen Job
          shell: kubectl create -f {{ crunchy_loadgen }} -n {{ namespace }} 

        - name: Verify loadgen pod is running 
          shell: kubectl get pods -n {{ namespace }} -l {{ loadgen_label }} -o jsonpath='{.items[0].status.phase}'
          args:
            executable: /bin/bash
          register: result
          until: "'Running' in result.stdout"
          delay: 30
          retries: 15

        - name: Verifying Load-generation
          shell: kubectl exec -it {{ pod_name.stdout }} -n {{ namespace }} -- psql -c '\dt'
          register: output
          until: "'pgbench_accounts' in output.stdout"
          delay: 30
          retries: 15

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"  

      always:
            ## RECORD END-OF-TEST IN LITMUS RESULT CR 
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
