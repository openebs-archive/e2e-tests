---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:

        ## Generating the testname for deployment
        - include_tasks: /utils/fcm/create_testname.yml

          ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'
          
         
        - block:

         ## Actual test
         ## Creating namespaces and making the application for deployment
            - include_tasks: /utils/k8s/pre_create_app_deploy.yml
            
            - name: Replace the storage capacity placeholder
              replace:
                 path: "{{ application_deployment }}"
                 regexp: "volume-capacity"
                 replace: "{{ capacity }}" 

            - name: Replace the affinity label annotation in statefulset yml
              replace:
                 path: "{{ application_deployment }}"
                 regexp: "affinity_label"
                 replace: "{{ affinity_label }}"

         ## Deploying the application
            - include_tasks: /utils/k8s/deploy_single_app.yml
              vars:
                check_app_pod: 'yes'
                delay: 10
                retries: 100

            - name: Verify that the postgres master and replica are available as cluster services
              shell: kubectl get svc -n {{ app_ns }}
              args:
                executable: /bin/bash
              register: result_service
              failed_when: "'pgset-primary' and 'pgset-replica' not in result_service.stdout"        
       
          when: "'deprovision' not in action"

        - block:

            - name: Deprovisioning the Application
              include_tasks: /utils/k8s/deprovision_statefulset.yml
              vars:
                app_deployer: "{{ application_deployment }}"

          when: "'deprovision' is in action"

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"

      always:
            ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
