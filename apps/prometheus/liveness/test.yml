---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - vars.yml

  tasks:
    - block:
        - block:

            - name: Record test instance/run ID
              set_fact:
                run_id: "{{ lookup('env','RUN_ID') }}"

            - name: Construct testname appended with runID
              set_fact:
                test_name: "{{ test_name }}-{{ run_id }}"

          when: lookup('env','RUN_ID')
        
        ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'

        - name: Replacing the placeholder for namespace
          replace:
            path: "{{ prometheus_liveness }}"
            regexp: "app-namespace"
            replace: "{{ namespace }}"   

        - name: Replacing the placeholder for liveness-retry-count
          replace:
            path: "{{ prometheus_liveness }}"
            regexp: "liveness-retry-count"
            replace: "{{ liveness_retry }}"   

        - name: Replacing the placeholder for liveness-timeout
          replace:
            path: "{{ prometheus_liveness }}"
            regexp: "liveness-timeout-seconds"
            replace: "{{ liveness_timeout }}"   

        - name: Replacing the placeholder for liveness-period
          replace:
            path: "{{ prometheus_liveness }}"
            regexp: "liveness-period-seconds"
            replace: "{{ liveness_period }}"   

        - name: Replacing the placeholder for liveness-period
          replace:
            path: "{{ prometheus_liveness }}"
            regexp: "port"
            replace: "{{ port }}"   

        - name : Fetch app service name
          shell: kubectl get svc -n {{ namespace }} -o jsonpath={.items[0].metadata.name}
          register: service_name
        
        - name : Fetch app service endpoint
          shell: kubectl get endpoints {{ service_name.stdout }} -n {{ namespace }} -o jsonpath={.subsets[0].addresses[0].ip}
          register: service_endpoint
        
        - name: Replacing the placeholder for service-endpoint
          replace:
            path: "{{ prometheus_liveness }}"
            regexp: "service-endpoint"
            replace: "{{ service_endpoint.stdout }}"

        - name: Creating prometheus-liveness job
          shell: kubectl create -f {{ prometheus_liveness }} 

        - name: Verifying whether liveness pod is started successfully  
          shell: kubectl get pod -n {{ namespace }} -l liveness=prometheus-liveness -o jsonpath={.items[0].status.phase} 
          register: pod_status
          until: "'Running' in pod_status.stdout"
          delay: 60 
          retries: 20

        

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"

      always:

        ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
        
