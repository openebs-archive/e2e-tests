---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:

         ## Generating the testname for deployment
        - include_tasks: /utils/fcm/create_testname.yml

         ## RECORD START-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'

        - block:

         ## Actual test
         ## Creating namespaces and making the application for deployment
            - include_tasks: /utils/k8s/pre_create_app_deploy.yml
            
            - name: Replace the storage capacity placeholder
              replace:
                path: "{{ application_deployment }}"
                regexp: volume-capacity
                replace: "{{ lookup('env','VOLUME_CAPACITY') }}"

            - name: Replace ClusterRoleBinding's namespace placeholder
              replace:
                path: "{{ application_deployment }}"
                regexp: cr-namespace
                replace: "{{ lookup('env','APP_NAMESPACE') }}"
           
            - name: Replace target affinity label placeholder
              replace:
                path: "{{ application_deployment }}"
                regexp: "targetkey: lvalue"
                replace: "{{ lookup('env','AFFINITY_LABEL') }}: {{ app_lvalue }}"

         ## Deploying the application
            - include_tasks: /utils/k8s/deploy_single_app.yml
              vars:
                check_app_pod: 'yes'
                delay: 10
                retries: 100

            - set_fact:
                flag: "Pass"

          when: "'deprovision' not in action"

        - block:

            - name: Deprovisioning the Application
              include_tasks: /utils/k8s/deprovision_deployment.yml
              vars:
                app_deployer: "{{ application_deployment }}"

            - set_fact:
                flag: "Pass"

          when: "'deprovision' is in action"

      rescue:
        - set_fact:
            flag: "Fail"

      always:
            ## RECORD END-OF-TEST IN LITMUS RESULT CR
        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
