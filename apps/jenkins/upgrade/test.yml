---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml

  tasks:
    - block:
        - block:

            - name: Record test instance/run ID
              set_fact:
                run_id: "{{ lookup('env','RUN_ID') }}"

            - name: Construct testname appended with runID
              set_fact:
                test_name: "{{ test_name }}-{{ run_id }}"

          when: lookup('env','RUN_ID')

        ## Record the funclib path ##

        - name: Record the funcutil  path
          set_fact:
            funclib_path: "/funclib/{{ funcutil }}"

        ## RECORD START-OF-TEST IN LITMUS RESULT CR

        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'SOT'
            app: "jenkins"

        ## DISPLAY APP INFORMATION

        - name: Display the app information passed via the test job
          debug:
            msg:
              - "The application info is as follows:"
              - "Namespace           : {{ app_namespace }}"
              - "Label               : {{ label }}"


        - name: Verify that the AUT (Application Under Test) is running
          shell: >
            kubectl get pods -n {{ app_namespace }} -l {{ label }} --no-headers
            -o custom-columns=:status.phase
          args:
            executable: /bin/bash
          register: app_status
          until: "((app_status.stdout_lines|unique)|length) == 1 and 'Running' in app_status.stdout"
          delay: 10
          retries: 12

        ## APPLICATION UPGRADE START

        - include: "{{ funclib_path }}"
          app_ns: "{{ app_namespace }}"
          app_label: "{{ label }}"

        - block:

            - name: Checking status of application pod
              shell: kubectl get pod -n {{ app_namespace }} -l {{ label }} -o jsonpath='{.items[0].status.phase}'
              register: app_pod
              until: "'Running' in app_pod.stdout"
              delay: 15
              retries: 30

          when: label != ''


        - name: Checking the image of application pod post upgrade.
          shell: kubectl get {{ deploy_type  }} {{ app_name }}  -n {{ app_namespace}} -o jsonpath="{..image}"
          args:
            executable: /bin/bash
          register: image_out
          failed_when: "image_name not in image_out.stdout"

        - set_fact:
            flag: "Pass"

      rescue:
        - set_fact:
            flag: "Fail"

      always:

        ## RECORD END-OF-TEST IN LITMUS RESULT CR

        - include_tasks: /utils/fcm/update_e2e_result_resource.yml
          vars:
            status: 'EOT'
            app: "jenkins"
